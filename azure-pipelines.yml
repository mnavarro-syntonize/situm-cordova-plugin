# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- azure-pipelines

pr: none

variables:
- group: Passwords

resources:
  repositories:
  - repository: sys_kubernetes_templates
    type: bitbucket
    endpoint: Bitbucket - sistemas
    name: situm/sys-kubernetes-templates.git
    ref: SIS-144

jobs:

- job: Ios_job
  pool:
    vmImage: 'macOS-10.14'
    
  steps:
   - template: azure-templates/upload-sharepoint.yml@sys_kubernetes_templates
     parameters:
       prepare_sharepoint: False
       properties_file: 'scripts/framework.properties'
       prepare_ndk: false
    
   - script: |
      if [ "$(branch)" == "master-release" ] || [ "$(branch)" == "master" ] || [ $(echo $(branch) | grep -cE "^release-*") -eq 1 ];then
        buildType="Release"
      else
        buildType="Debug"
      fi
       echo "##vso[task.setvariable variable=buildType]$(echo $buildType)"
     displayName: Set buildType
    
   - script: |
        sudo xcode-select -switch /Applications/Xcode_11.3.1.app
        mkdir -p /Users/runner/.cocoapods/repos/ 
        wget https://github.com/CocoaPods/Specs/archive/master.zip 
        echo "##########  UNZIPPING FILES  ##########"
        unzip -qq master.zip
        echo -n "##########  MOVING TO NEW FOLDER  ##########"
        mv Specs-master/Specs  /Users/runner/.cocoapods/repos/
     displayName: Add repo 

   - script: |
      sudo xcode-select -switch /Applications/Xcode_11.3.1.app
      tests/scripts/copy_ios_resources.sh
      scripts/update_iosSDK_version.sh .
      #cd src/ios && pod repo update && pod install && xcodebuild test -workspace SitumCordovaPlugin.xcworkspace -scheme CordovaLib -destination 'platform=iOS Simulator,name=iPhone 7,OS=11.2'
      cd src/ios && pod repo update && pod install && xcodebuild test -workspace SitumCordovaPlugin.xcworkspace -scheme CordovaLib -destination 'platform=iOS Simulator,name=iPhone 7,OS=10.2'
     displayName: iOS test

   - script: |
      sudo xcode-select -switch /Applications/Xcode_11.3.1.app
      tests/scripts/self-destruct.sh
     displayName: clean repo
      
    
  